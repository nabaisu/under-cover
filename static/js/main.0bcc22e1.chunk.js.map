{"version":3,"sources":["logo.svg","components/landing-page.js","components/under-cover-form.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","useState","show","setShow","className","Alert","variant","Heading","Button","onClick","UCForm","validateYoutubeUrl","debounce","value","ctx","input","cb","console","log","process","Boolean","match","fluid","lg","onSubmit","event","errors","values","name","label","placeholder","type","errorMessage","validate","required","email","pattern","color","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,G,OAAA,IAA0B,kC,wCC8B1BA,MA1Bf,WAAwB,IAAD,EACGC,oBAAS,GADZ,mBACdC,EADc,KACRC,EADQ,KAErB,OACE,sBAAKC,UAAU,YAAf,UACE,yEAEA,eAACC,EAAA,EAAD,CAAOH,KAAMA,EAAMI,QAAQ,UAA3B,UACE,cAACD,EAAA,EAAME,QAAP,+BACA,mLAKA,uBACA,qBAAKH,UAAU,6BAAf,SACE,cAACI,EAAA,EAAD,CAAQC,QAAS,kBAAMN,GAAQ,IAAQG,QAAQ,kBAA/C,mCAMFJ,GAAQ,cAACM,EAAA,EAAD,CAAQC,QAAS,kBAAMN,GAAQ,IAA/B,4B,gCCkGDO,MAxGf,WACE,IACMC,EAAqBC,oBAAS,SAACC,EAAOC,EAAKC,EAAOC,GAGtDC,QAAQC,IAJoBC,+BAK5BH,EAAGI,QAAQP,EAAMQ,MAFf,gIAGD,KAUH,OACE,mCACE,cAAC,YAAD,CAAWC,OAAO,EAAlB,SACE,cAAC,MAAD,UACE,cAAC,MAAD,CAAKC,GAAI,GAAT,SACE,cAAC,OAAD,UACE,eAAC,WAAD,WACE,cAAC,YAAD,UACE,mDAEF,cAAC,eAAD,CAAcnB,UAAU,OAAxB,0CAIA,eAAC,SAAD,CAAQoB,SAvBH,SAACC,EAAOC,EAAQC,GAGjCV,QAAQC,IAAIS,IAoBA,UACE,qBAAKvB,UAAU,OAAf,SACE,cAAC,UAAD,CACEwB,KAAK,QACLC,MAAM,SACNC,YAAY,oBACZC,KAAK,QACLC,aAAa,gBACbC,SAAU,CACRC,SAAU,CAAErB,OAAO,GACnBsB,MAAO,CAAEtB,OAAO,QAItB,qBAAKT,UAAU,OAAf,SACE,cAAC,UAAD,CACEwB,KAAK,cACLC,MAAM,eACNC,YAAY,qCACZC,KAAK,MACLC,aAAa,kBACbC,SAAU,CACRC,SAAU,CAAErB,OAAO,GACnBQ,MAAOV,OAIb,qBAAKP,UAAU,OAAf,SACE,cAAC,UAAD,CACEwB,KAAK,kBACLC,MAAM,mBACNC,YAAY,qBACZC,KAAK,WACLC,aAAa,cACbC,SAAU,CACRC,SAAU,CAAErB,OAAO,QAIzB,qBAAKT,UAAU,OAAf,SACE,cAAC,UAAD,CACEwB,KAAK,iBACLC,MAAM,gCACNC,YAAY,gCACZC,KAAK,SACLC,aAAa,0BACbC,SAAU,CACRC,SAAU,CAAErB,OAAO,GACnBuB,QAAS,CACPvB,MAAO,WACPmB,aAAc,0BAKtB,sBAAK5B,UAAU,yBAAf,UACE,cAAC,SAAD,CAAQ2B,KAAK,SAASM,MAAM,UAAUjC,UAAU,GAAhD,oBAEU,IACV,cAAC,SAAD,CAAQ2B,KAAK,QAAQM,MAAM,YAAYjC,UAAU,GAAjD,wCC1FLkC,MAdf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKmC,IAAKC,EAAMpC,UAAU,WAAWqC,IAAI,SACzC,gDAEF,cAAC,EAAD,IACI,cAAC,EAAD,QCDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0bcc22e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState} from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction LandingPage() {\n  const [show, setShow] = useState(true);\n  return (\n    <div className=\"container\">\n      <h2>this should be part of the landing page</h2>\n\n      <Alert show={show} variant=\"success\">\n        <Alert.Heading>How's it going?!</Alert.Heading>\n        <p>\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\n          fermentum.\n        </p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\n            Close me y'all!\n          </Button>\n        </div>\n      </Alert>\n\n      {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  FormGroup,\n  Button,\n  CardTitle,\n  CardSubtitle,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\nimport { debounce } from \"lodash\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nfunction UCForm() {\n  const REACT_APP_YOUTUBE_API = process.env.REACT_APP_SECRET_NAME;\n  const validateYoutubeUrl = debounce((value, ctx, input, cb) => {\n    const p =\n      /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n    console.log(REACT_APP_YOUTUBE_API);\n    cb(Boolean(value.match(p)));\n  }, 300);\n  const submitForm = (event, errors, values) => {\n    // call youtube API and check video duration\n    // check if the\n    console.log(values);\n  };\n  const parseDuration = (value) => {\n    return moment.duration(value).asSeconds();\n  };\n\n  return (\n    <>\n      <Container fluid={true}>\n        <Row>\n          <Col lg={12}>\n            <Card>\n              <CardBody>\n                <CardTitle>\n                  <h2>Validation type</h2>\n                </CardTitle>\n                <CardSubtitle className=\"mb-3\">\n                  The form should be sent here\n                </CardSubtitle>\n\n                <AvForm onSubmit={submitForm}>\n                  <div className=\"mb-3\">\n                    <AvField\n                      name=\"email\"\n                      label=\"E-Mail\"\n                      placeholder=\"Enter Valid Email\"\n                      type=\"email\"\n                      errorMessage=\"Invalid Email\"\n                      validate={{\n                        required: { value: true },\n                        email: { value: true },\n                      }}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <AvField\n                      name=\"youtube-url\"\n                      label=\"Youtube URL \"\n                      placeholder=\"https://youtube.com/watch=asdfasdf\"\n                      type=\"url\"\n                      errorMessage=\"Enter Valid url\"\n                      validate={{\n                        required: { value: true },\n                        match: validateYoutubeUrl,\n                      }}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <AvField\n                      name=\"message-to-hide\"\n                      label=\"Message to Hide \"\n                      placeholder=\"i love you my love\"\n                      type=\"textarea\"\n                      errorMessage=\"Enter text \"\n                      validate={{\n                        required: { value: true },\n                      }}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <AvField\n                      name=\"starting-delay\"\n                      label=\"Starting Delay (in seconds)  \"\n                      placeholder=\"Enter Only alphanumeric value\"\n                      type=\"number\"\n                      errorMessage=\"Enter Only Alphanumeric\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Only Alphanumeric\",\n                        },\n                      }}\n                    />\n                  </div>\n                  <div className=\"d-flex flex-wrap gap-2\">\n                    <Button type=\"submit\" color=\"primary\" className=\"\">\n                      Submit\n                    </Button>{\" \"}\n                    <Button type=\"reset\" color=\"secondary\" className=\"\">\n                      Cancel\n                    </Button>\n                  </div>\n                </AvForm>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default UCForm;\n","import logo from './logo.svg';\nimport './App.css';\nimport LandingPage from './components/landing-page';\nimport UCForm from './components/under-cover-form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Under Cover</h1>\n      </header>\n      <LandingPage></LandingPage>\n          <UCForm/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}